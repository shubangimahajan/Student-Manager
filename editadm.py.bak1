#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Dec 28, 2018 01:33:06 PM IST  platform: Windows NT

import sys
from tkinter import messagebox

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import editadm_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    editadm_support.set_Tk_var()
    top = Toplevel1 (root
	)
    editadm_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    editadm_support.set_Tk_var()
    top = Toplevel1 (w)
    editadm_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def search(self):
      import pymysql
      adm=self.eadm.get()
      conn=pymysql.connect(host='localhost',user='root',passwd='admin',db='school')
      cur=conn.cursor()
      cur.execute('select * from tbstudent where id="%s"' % \
              (adm)	)

      rows=cur.fetchall()
      r=len(rows);
      if(r==0):
        self.Label.configure(text='''data not found''')
      cur.description
      for row in cur:       
       self.eadmno.insert(0,row[7]);
       self.ename.insert(0,row[0]);
       self.efather.insert(0,row[2]);
       self.emother.insert(0,row[3]);       
       self.ephone.insert(0,row[5]);       
       self.email.insert(0,row[6]);   
       self.enewadm.insert(0,row[6]);	   
       self.cclass.insert(0,row[1]);
      print("displayed")
	

    def male(self):
      global gender
      gender ="male"
    def female(self):
      global gender
      gender="female"
    def update(self):
     import pymysql
     if(self.rmale.select()):
       self.male()
       messagebox.showinfo("gender","male")
     if (self.rfemale.select()):
       self.female()
       messagebox.showinfo("gender","female")
     adm=self.enewadm.get()
     nclass=self.cclass.get()
     name=self.ename.get()
     fathername= self.efather.get()
     mothername= self.emother.get()
     phoneno= self.ephone.get()
     email= self.email.get()
     conn= pymysql.connect(host='localhost',user='root',passwd='admin',db='school');
     cursor=conn.cursor();
     try:
       cursor.execute('update tbstudent set name="%s",classs="%s",fathername="%s",mothername="%s",gender="%s",phone="%s",email="%s" where id="%s"' % \
                 (name,nclass,fathername,mothername,gender,phoneno,email,adm))
       conn.commit();
       print("data successfully updated");
     except:
       conn.rollback();
       conn.close(); 
	   
    def delete(self):
      import pymysql;
      id=self.eadm.get()
      conn= pymysql.connect(host='localhost', user= 'root', passwd='admin', db= 'school');
      cur=conn.cursor();
      try:
        cur.execute( 'delete from tbstudent where id="%s"' % \
                (id))
        conn.commit()	
        print("data deleted")
      except:
        conn.rollback() 
        conn.close()
	  
	  
	
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+371+182")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.083, rely=0.133, height=21, width=80)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''admission no.''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.083, rely=0.244, height=21, width=102)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''new admission no''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.083, rely=0.378, height=21, width=31)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''class''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.083, rely=0.444, height=21, width=43)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''gender''')
		
        self.Label = tk.Label(top)
        self.Label.place(relx=0.267, rely=0.911, height=21, width=85)
        self.Label.configure(activebackground="#f9f9f9")
        self.Label.configure(activeforeground="black")
        self.Label.configure(background="#d9d9d9")
        self.Label.configure(disabledforeground="#a3a3a3")
        self.Label.configure(foreground="#000000")
        self.Label.configure(highlightbackground="#d9d9d9")
        self.Label.configure(highlightcolor="black")
        self.Label.configure(text='''''')		

        self.bupdate = tk.Button(top)
        self.bupdate.place(relx=0.417, rely=0.822, height=24, width=48)
        self.bupdate.configure(activebackground="#ececec")
        self.bupdate.configure(activeforeground="#000000")
        self.bupdate.configure(background="#d9d9d9")
        self.bupdate.configure(disabledforeground="#a3a3a3")
        self.bupdate.configure(foreground="#000000")
        self.bupdate.configure(highlightbackground="#d9d9d9")
        self.bupdate.configure(highlightcolor="black")
        self.bupdate.configure(pady="0")
        self.bupdate.configure(text='''update''')
        self.bupdate.configure(command=self.update)

        self.bdelete = tk.Button(top)
        self.bdelete.place(relx=0.567, rely=0.822, height=24, width=43)
        self.bdelete.configure(activebackground="#ececec")
        self.bdelete.configure(activeforeground="#000000")
        self.bdelete.configure(background="#d9d9d9")
        self.bdelete.configure(disabledforeground="#a3a3a3")
        self.bdelete.configure(foreground="#000000")
        self.bdelete.configure(highlightbackground="#d9d9d9")
        self.bdelete.configure(highlightcolor="black")
        self.bdelete.configure(pady="0")
        self.bdelete.configure(text='''delete''')
        self.bdelete.configure(command=self.delete)

        self.bsearch = tk.Button(top)
        self.bsearch.place(relx=0.667, rely=0.133, height=24, width=45)
        self.bsearch.configure(activebackground="#ececec")
        self.bsearch.configure(activeforeground="#000000")
        self.bsearch.configure(background="#d9d9d9")
        self.bsearch.configure(disabledforeground="#a3a3a3")
        self.bsearch.configure(foreground="#000000")
        self.bsearch.configure(highlightbackground="#d9d9d9")
        self.bsearch.configure(highlightcolor="black")
        self.bsearch.configure(pady="0")
        self.bsearch.configure(text='''search''')
        self.bsearch.configure(command=self.search)

        self.eadm = tk.Entry(top)
        self.eadm.place(relx=0.283, rely=0.133,height=20, relwidth=0.273)
        self.eadm.configure(background="white")
        self.eadm.configure(disabledforeground="#a3a3a3")
        self.eadm.configure(font="TkFixedFont")
        self.eadm.configure(foreground="#000000")
        self.eadm.configure(highlightbackground="#d9d9d9")
        self.eadm.configure(highlightcolor="black")
        self.eadm.configure(insertbackground="black")
        self.eadm.configure(selectbackground="#c4c4c4")
        self.eadm.configure(selectforeground="black")

        self.enewadm = tk.Entry(top)
        self.enewadm.place(relx=0.283, rely=0.244,height=20, relwidth=0.273)
        self.enewadm.configure(background="white")
        self.enewadm.configure(disabledforeground="#a3a3a3")
        self.enewadm.configure(font="TkFixedFont")
        self.enewadm.configure(foreground="#000000")
        self.enewadm.configure(highlightbackground="#d9d9d9")
        self.enewadm.configure(highlightcolor="black")
        self.enewadm.configure(insertbackground="black")
        self.enewadm.configure(selectbackground="#c4c4c4")
        self.enewadm.configure(selectforeground="black")

        self.rmale = tk.Radiobutton(top)
        self.rmale.place(relx=0.283, rely=0.444, relheight=0.056, relwidth=0.09)
        self.rmale.configure(activebackground="#ececec")
        self.rmale.configure(activeforeground="#000000")
        self.rmale.configure(background="#d9d9d9")
        self.rmale.configure(disabledforeground="#a3a3a3")
        self.rmale.configure(foreground="#000000")
        self.rmale.configure(highlightbackground="#d9d9d9")
        self.rmale.configure(highlightcolor="black")
        self.rmale.configure(justify='left')
        self.rmale.configure(text='''male''')
        self.rmale.configure(command=self.male)
        self.rmale.configure(value='male')
        self.rmale.configure(variable="v")

        self.rfemale = tk.Radiobutton(top)
        self.rfemale.place(relx=0.433, rely=0.444, relheight=0.056
                , relwidth=0.107)
        self.rfemale.configure(activebackground="#ececec")
        self.rfemale.configure(activeforeground="#000000")
        self.rfemale.configure(background="#d9d9d9")
        self.rfemale.configure(disabledforeground="#a3a3a3")
        self.rfemale.configure(foreground="#000000")
        self.rfemale.configure(highlightbackground="#d9d9d9")
        self.rfemale.configure(highlightcolor="black")
        self.rfemale.configure(justify='left')
        self.rfemale.configure(text='''female''')
        self.rfemale.configure(command=self.female)
        self.rfemale.configure(value="female")
        self.rfemale.configure(variable='v')

        self.cclass = ttk.Combobox(top)
        self.cclass.place(relx=0.283, rely=0.378, relheight=0.047
                , relwidth=0.272)
        self.value_list = [1,2,3,4,5,6,7,8,9,10,]
        self.cclass.configure(values=self.value_list)
        self.cclass.configure(textvariable=editadm_support.combobox)
        self.cclass.configure(width=163)
        self.cclass.configure(takefocus="")

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.083, rely=0.644, height=21, width=57)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''phone no''')

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.083, rely=0.578, height=21, width=78)
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''father's name''')

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.083, rely=0.311, height=21, width=36)
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(text='''name''')

        self.Label8 = tk.Label(top)
        self.Label8.place(relx=0.083, rely=0.511, height=21, width=86)
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(text='''mother's name''')

        self.Label9 = tk.Label(top)
        self.Label9.place(relx=0.083, rely=0.711, height=21, width=35)
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(text='''email''')
        self.Label9.configure(width=35)

        self.ename = tk.Entry(top)
        self.ename.place(relx=0.283, rely=0.311,height=20, relwidth=0.273)
        self.ename.configure(background="white")
        self.ename.configure(disabledforeground="#a3a3a3")
        self.ename.configure(font="TkFixedFont")
        self.ename.configure(foreground="#000000")
        self.ename.configure(insertbackground="black")

        self.emother = tk.Entry(top)
        self.emother.place(relx=0.283, rely=0.511,height=20, relwidth=0.273)
        self.emother.configure(background="white")
        self.emother.configure(disabledforeground="#a3a3a3")
        self.emother.configure(font="TkFixedFont")
        self.emother.configure(foreground="#000000")
        self.emother.configure(insertbackground="black")

        self.efather = tk.Entry(top)
        self.efather.place(relx=0.283, rely=0.578,height=20, relwidth=0.273)
        self.efather.configure(background="white")
        self.efather.configure(disabledforeground="#a3a3a3")
        self.efather.configure(font="TkFixedFont")
        self.efather.configure(foreground="#000000")
        self.efather.configure(insertbackground="black")

        self.ephone = tk.Entry(top)
        self.ephone.place(relx=0.283, rely=0.644,height=20, relwidth=0.273)
        self.ephone.configure(background="white")
        self.ephone.configure(disabledforeground="#a3a3a3")
        self.ephone.configure(font="TkFixedFont")
        self.ephone.configure(foreground="#000000")
        self.ephone.configure(insertbackground="black")

        self.email = tk.Entry(top)
        self.email.place(relx=0.283, rely=0.711,height=20, relwidth=0.273)
        self.email.configure(background="white")
        self.email.configure(disabledforeground="#a3a3a3")
        self.email.configure(font="TkFixedFont")
        self.email.configure(foreground="#000000")
        self.email.configure(insertbackground="black")

if __name__ == '__main__':
    vp_start_gui()





