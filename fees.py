#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Dec 28, 2018 12:51:39 PM IST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import fees_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    fees_support.set_Tk_var()
    top = Toplevel1 (root)
    fees_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    fees_support.set_Tk_var()
    top = Toplevel1 (w)
    fees_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def fees(self):
     import pymysql;
     recieptno=self.ereciept.get();
     id=self.eadmno.get();
     name=self.ename.get();
     classs=self.cclass.get();
     rollno=self.erollno.get();
     admfees=self.eadmfees.get();
     annualfees=self.eannual.get();
     tutfees=self.etution.get();
     fine=self.efine.get();
     total=int (admfees)+ int (annualfees) +int (tutfees)+ int (fine);
     conn=pymysql.connect(host='localhost',user='root',passwd='admin',db='school')
     cursor=conn.cursor();
     try: 
      cursor.execute('insert into tbfees (reciept,id,name,class,rollno,admissionfees,annualfees,tutionfees,fine,total) value ("%s","%s","%s","%s","%s","%s","%s","%s","%s","%s")' % \
	           (recieptno,id,name,classs,rollno,admfees,annualfees,tutfees,fine,total))
      conn.commit();
      print("data saved");
     except:
      conn.rollback()	
      conn.close()
   

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+650+150")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.183, rely=0.111, height=21, width=80)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''admission no.''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.183, rely=0.178, height=21, width=36)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''name''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.183, rely=0.311, height=21, width=31)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''class''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.183, rely=0.378, height=21, width=84)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''admission fees''')

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.183, rely=0.444, height=21, width=66)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''annual fees''')

        self.Label6 = tk.Label(top)
        self.Label6.place(relx=0.183, rely=0.511, height=21, width=62)
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''tution fees''')

        self.Label7 = tk.Label(top)
        self.Label7.place(relx=0.183, rely=0.044, height=21, width=59)
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(text='''reciept no''')

        self.Label8 = tk.Label(top)
        self.Label8.place(relx=0.183, rely=0.578, height=21, width=26)
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(text='''fine''')

		
        self.Label10 = tk.Label(top)
        self.Label10.place(relx=0.183, rely=0.244, height=21, width=40)
        self.Label10.configure(background="#d9d9d9")
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(text=''' roll no''')

        self.bsave = tk.Button(top)
        self.bsave.place(relx=0.433, rely=0.756, height=24, width=34)
        self.bsave.configure(activebackground="#ececec")
        self.bsave.configure(activeforeground="#000000")
        self.bsave.configure(background="#d9d9d9")
        self.bsave.configure(disabledforeground="#a3a3a3")
        self.bsave.configure(foreground="#000000")
        self.bsave.configure(highlightbackground="#d9d9d9")
        self.bsave.configure(highlightcolor="black")
        self.bsave.configure(pady="0")
        self.bsave.configure(text='''save''')
        self.bsave.configure(command=self.fees)

        self.ereciept = tk.Entry(top)
        self.ereciept.place(relx=0.4, rely=0.044,height=20, relwidth=0.273)
        self.ereciept.configure(background="white")
        self.ereciept.configure(disabledforeground="#a3a3a3")
        self.ereciept.configure(font="TkFixedFont")
        self.ereciept.configure(foreground="#000000")
        self.ereciept.configure(insertbackground="black")

        self.eadmno = tk.Entry(top)
        self.eadmno.place(relx=0.4, rely=0.111,height=20, relwidth=0.273)
        self.eadmno.configure(background="white")
        self.eadmno.configure(disabledforeground="#a3a3a3")
        self.eadmno.configure(font="TkFixedFont")
        self.eadmno.configure(foreground="#000000")
        self.eadmno.configure(insertbackground="black")

        self.ename = tk.Entry(top)
        self.ename.place(relx=0.4, rely=0.178,height=20, relwidth=0.273)
        self.ename.configure(background="white")
        self.ename.configure(disabledforeground="#a3a3a3")
        self.ename.configure(font="TkFixedFont")
        self.ename.configure(foreground="#000000")
        self.ename.configure(insertbackground="black")

        self.erollno = tk.Entry(top)
        self.erollno.place(relx=0.4, rely=0.244,height=20, relwidth=0.273)
        self.erollno.configure(background="white")
        self.erollno.configure(disabledforeground="#a3a3a3")
        self.erollno.configure(font="TkFixedFont")
        self.erollno.configure(foreground="#000000")
        self.erollno.configure(insertbackground="black")

        self.etution = tk.Entry(top)
        self.etution.place(relx=0.4, rely=0.511,height=20, relwidth=0.273)
        self.etution.configure(background="white")
        self.etution.configure(disabledforeground="#a3a3a3")
        self.etution.configure(font="TkFixedFont")
        self.etution.configure(foreground="#000000")
        self.etution.configure(insertbackground="black")
        self.etution.configure(width=164)

        self.eadmfees = tk.Entry(top)
        self.eadmfees.place(relx=0.4, rely=0.378,height=20, relwidth=0.273)
        self.eadmfees.configure(background="white")
        self.eadmfees.configure(disabledforeground="#a3a3a3")
        self.eadmfees.configure(font="TkFixedFont")
        self.eadmfees.configure(foreground="#000000")
        self.eadmfees.configure(insertbackground="black")

        self.eannual = tk.Entry(top)
        self.eannual.place(relx=0.4, rely=0.444,height=20, relwidth=0.273)
        self.eannual.configure(background="white")
        self.eannual.configure(disabledforeground="#a3a3a3")
        self.eannual.configure(font="TkFixedFont")
        self.eannual.configure(foreground="#000000")
        self.eannual.configure(insertbackground="black")

        self.efine = tk.Entry(top)
        self.efine.place(relx=0.4, rely=0.578,height=20, relwidth=0.273)
        self.efine.configure(background="white")
        self.efine.configure(disabledforeground="#a3a3a3")
        self.efine.configure(font="TkFixedFont")
        self.efine.configure(foreground="#000000")
        self.efine.configure(insertbackground="black")



        self.cclass = ttk.Combobox(top)
        self.cclass.place(relx=0.4, rely=0.311, relheight=0.047
                , relwidth=0.272)
        self.value_list = [1,2,3,4,5,6,7,8,9,10,]
        self.cclass.configure(values=self.value_list)
        self.cclass.configure(textvariable=fees_support.combobox)
        self.cclass.configure(width=163)
        self.cclass.configure(takefocus="")

if __name__ == '__main__':
    vp_start_gui()





